{"dependencies":[{"id":"dart.core","name":"dart:core","children":[{"id":"Object","name":"Object","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","line":"29"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns a string representation of this object.\n","line":"48"},{"id":"noSuchMethod1()","name":"noSuchMethod","children":[{"ref":{"name":"InvocationMirror","refId":"dart.core/InvocationMirror"},"id":"invocation","name":"invocation","kind":"param"}],"kind":"method","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [InvocationMirror].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"43"},{"ref":{"name":"Type","refId":"dart.core/Type"},"id":"runtimeType","name":"runtimeType","kind":"property","comment":"\nA representation of the runtime type of the object.\n","line":"65"},{"id":"Object0()","name":"Object","kind":"constructor","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"18"}],"uri":"file:///usr/local/Cellar/dart-editor/20810/dart-sdk//lib/core/object.dart","kind":"class","comment":"\nEverything in Dart is an [Object].\n","line":"10"}],"uri":"file:///usr/local/Cellar/dart-editor/20810/dart-sdk//lib/core/core.dart","kind":"library","line":"5"},{"id":"matcher","name":"package:unittest/matcher.dart","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"id":"Matcher","name":"Matcher","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","comment":"\nThis does the matching of the actual vs expected values.\n[item] is the actual value. [matchState] can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in [describeMismatch].\n","line":"61"},{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describe1()","name":"describe","children":[{"ref":{"name":"Description","refId":"matcher/Description"},"id":"description","name":"description","kind":"param"}],"kind":"method","comment":"This builds a textual description of the matcher. ","line":"64"},{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describeMismatch4()","name":"describeMismatch","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"Description","refId":"matcher/Description"},"id":"mismatchDescription","name":"mismatchDescription","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param","line":"77"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"verbose","name":"verbose","kind":"param","line":"77"}],"kind":"method","comment":"\nThis builds a textual description of a specific mismatch. [item]\nis the value that was tested by [matches]; [matchState] is\nthe [MatchState] that was passed to and supplemented by [matches]\nwith additional information about the mismact, and [mismatchDescription]\nis the [Description] that is being built to decribe the mismatch.\nA few matchers make use of the [verbose] flag to provide detailed\ninformation that is not typically included but can be of help in\ndiagnosing failures, such as stack traces.\n","line":"76"}],"uri":"package:unittest/src/interfaces.dart","kind":"class","comment":"\n[expect] Matchers must implement the Matcher class.\nThe base Matcher class that implements this interface has\na generic implementation of [describeMismatch] so this does\nnot need to be provided unless a more clear description is\nrequired. The other two methods ([matches] and [describe])\nmust always be provided as they are highly matcher-specific.\n","line":"54"},{"superclass":{"name":"BaseMatcher","refId":"matcher/BaseMatcher"},"isAbstract":true,"id":"TypeMatcher","name":"TypeMatcher","children":[{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describe1()","name":"describe","children":[{"ref":{"name":"Description","refId":"matcher/Description"},"id":"description","name":"description","kind":"param"}],"kind":"method","line":"446"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"_name","name":"_name","kind":"variable","isPrivate":true,"line":"444"},{"id":"TypeMatcher1()","name":"TypeMatcher","children":[{"initializedField":{"name":"_name","refId":"matcher/TypeMatcher/_name"},"ref":{"name":"String","refId":"dart.core/String"},"id":"_name","name":"_name","kind":"param","isPrivate":true}],"kind":"constructor","line":"445"}],"uri":"package:unittest/src/core_matchers.dart","kind":"class","line":"443"},{"interfaces":[{"name":"Matcher","refId":"matcher/Matcher"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"id":"BaseMatcher","name":"BaseMatcher","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","comment":"\nTests the matcher against a given [item]\nand return true if the match succeeds; false otherwise.\n[matchState] may be used to return additional info for\nthe use of [describeMismatch].\n","line":"39"},{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describe1()","name":"describe","children":[{"ref":{"name":"Description","refId":"matcher/Description"},"id":"mismatchDescription","name":"mismatchDescription","kind":"param"}],"kind":"method","comment":"\nCreates a textual description of a matcher,\nby appending to [mismatchDescription].\n","line":"45"},{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describeMismatch4()","name":"describeMismatch","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"Description","refId":"matcher/Description"},"id":"mismatchDescription","name":"mismatchDescription","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param","line":"55"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"verbose","name":"verbose","kind":"param","line":"55"}],"kind":"method","comment":"\nGenerates a description of the matcher failed for a particular\n[item], by appending the description to [mismatchDescription].\nIt does not check whether the [item] fails the match, as it is\nonly called after a failed match. There may be additional info\nabout the mismatch in [matchState].\n","line":"54"},{"id":"BaseMatcher0()","name":"BaseMatcher","kind":"constructor","line":"31"}],"uri":"package:unittest/src/basematcher.dart","kind":"class","comment":"\nBaseMatcher is the base class for all matchers. To implement a new\nmatcher, either add a class that implements Matcher or a class that\nextends BaseMatcher. Extending BaseMatcher has the benefit that a\ndefault implementation of describeMismatch will be provided.\n","line":"30"}],"uri":"package:unittest/matcher.dart","kind":"library","comment":"\nThe matcher library provides a 3rd generation assertion mechanism, drawing\ninspiration from [Hamcrest](http://code.google.com/p/hamcrest/).\n","line":"8"}],"id":"bot_test","children":[{"returnType":{"name":"Matcher","refId":"matcher/Matcher"},"id":"finishesWith1()","name":"finishesWith","children":[{"id":"matcher","name":"matcher","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"method","comment":"\nMatches a [Future] that completes succesfully with a value that matches\n[matcher]. Note that this creates an asynchronous expectation. The call to\n`expect()` that includes this will return immediately and execution will\ncontinue. Later, when the future completes, the actual expectation will run.\n\nTo test that a Future completes with an exception, you can use [throws] and\n[throwsA].\n\nUnlike [completion] in `unittest`, exceptions are registered directly with\nthe test framework. They are not wrapped.\n","line":"76"},{"returnType":{"name":"void","refId":"void"},"id":"expectFutureComplete2()","name":"expectFutureComplete","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"id":"future","name":"future","kind":"param"},{"ref":{"name":"Action1","refId":"bot/Action1"},"isOptional":true,"id":"onComplete","name":"onComplete","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"method","line":"32"},{"returnType":{"name":"void","refId":"void"},"id":"expectFutureFail2()","name":"expectFutureFail","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"id":"future","name":"future","kind":"param"},{"ref":{"name":"Action1","refId":"bot/Action1"},"isOptional":true,"id":"onException","name":"onException","kind":"param"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"method","line":"16"},{"returnType":{"name":"void","refId":"void"},"id":"pending0()","name":"pending","uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"method","line":"3"},{"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"finishes","name":"finishes","uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"variable","line":"62"},{"isFinal":true,"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"throwsAssertionError","name":"throwsAssertionError","uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"variable","line":"13"},{"isFinal":true,"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"throwsNullArgumentError","name":"throwsNullArgumentError","uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"variable","line":"10"},{"isFinal":true,"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"throwsInvalidOperationError","name":"throwsInvalidOperationError","uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"variable","line":"7"},{"superclass":{"name":"TypeMatcher","refId":"matcher/TypeMatcher"},"id":"_NullArgumentError","name":"_NullArgumentError","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","line":"123"},{"id":"_NullArgumentError0()","name":"_NullArgumentError","kind":"constructor","line":"122"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"class","isPrivate":true,"line":"121"},{"superclass":{"name":"TypeMatcher","refId":"matcher/TypeMatcher"},"id":"_InvalidOperationError","name":"_InvalidOperationError","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","line":"118"},{"id":"_InvalidOperationError0()","name":"_InvalidOperationError","kind":"constructor","line":"117"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"class","isPrivate":true,"line":"116"},{"superclass":{"name":"TypeMatcher","refId":"matcher/TypeMatcher"},"id":"_StateErrorMatcher","name":"_StateErrorMatcher","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","line":"113"},{"id":"_StateErrorMatcher0()","name":"_StateErrorMatcher","kind":"constructor","line":"112"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"class","isPrivate":true,"line":"111"},{"superclass":{"name":"TypeMatcher","refId":"matcher/TypeMatcher"},"id":"_AssertionErrorMatcher","name":"_AssertionErrorMatcher","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","line":"108"},{"id":"_AssertionErrorMatcher0()","name":"_AssertionErrorMatcher","kind":"constructor","line":"107"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"class","isPrivate":true,"line":"106"},{"superclass":{"name":"BaseMatcher","refId":"matcher/BaseMatcher"},"id":"_Finishes","name":"_Finishes","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"matches2()","name":"matches","children":[{"id":"item","name":"item","kind":"param"},{"ref":{"name":"MatchState","refId":"matcher/MatchState"},"id":"matchState","name":"matchState","kind":"param"}],"kind":"method","line":"83"},{"returnType":{"name":"Description","refId":"matcher/Description"},"id":"describe1()","name":"describe","children":[{"ref":{"name":"Description","refId":"matcher/Description"},"id":"description","name":"description","kind":"param"}],"kind":"method","line":"96"},{"isFinal":true,"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"_matcher","name":"_matcher","kind":"variable","isPrivate":true,"line":"79"},{"id":"_Finishes1()","name":"_Finishes","children":[{"initializedField":{"name":"_matcher","refId":"bot_test/_Finishes/_matcher"},"ref":{"name":"Matcher","refId":"matcher/Matcher"},"id":"_matcher","name":"_matcher","kind":"param","isPrivate":true}],"kind":"constructor","line":"81"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/top_level.dart","kind":"class","isPrivate":true,"line":"78"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"EventWatcher","name":"EventWatcher","children":[{"returnType":{"name":"void","refId":"void"},"id":"handler1()","name":"handler","children":[{"ref":{"name":"T","refId":"bot_test/EventWatcher/T"},"id":"args","name":"args","kind":"param"}],"kind":"method","line":"11"},{"ref":{"name":"T","refId":"bot_test/EventWatcher/T"},"id":"lastArgs","name":"lastArgs","kind":"property","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"eventCount","name":"eventCount","kind":"property","line":"9"},{"ref":{"name":"T","refId":"bot_test/EventWatcher/T"},"id":"_lastArgs","name":"_lastArgs","kind":"variable","isPrivate":true,"line":"4"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"_eventCount","name":"_eventCount","kind":"variable","isPrivate":true,"line":"5"},{"id":"T","name":"T","kind":"typeparam"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/src/bot_test/event_watcher.dart","kind":"class","line":"3"}],"uri":"file:///Users/kevin/source/github/bot.dart/lib/bot_test.dart","kind":"library","line":"1"}